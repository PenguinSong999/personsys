<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.own.mapper.CheckworkInfMapper">
  <resultMap id="BaseResultMap" type="com.own.bean.CheckworkInf">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="DEPT_ID" jdbcType="INTEGER" property="deptId" />
    <result column="JOB_ID" jdbcType="INTEGER" property="jobId" />
    <result column="EMP_ID" jdbcType="INTEGER" property="empId" />
    <result column="WORKINGDAYS" jdbcType="INTEGER" property="workingdays" />
    <result column="DAYSLEAVE" jdbcType="INTEGER" property="daysleave" />
    <result column="CREATEDATE" jdbcType="TIMESTAMP" property="createdate" />
    <result column="DAYSOUT" jdbcType="INTEGER" property="daysout" />
    <association property="employeeInf" column="EMP_ID" select="com.own.mapper.EmployeeInfMapper.selectByPrimaryKey"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, DEPT_ID, JOB_ID, EMP_ID, WORKINGDAYS, DAYSLEAVE, CREATEDATE, DAYSOUT
  </sql>
  <select id="selectByExample" parameterType="com.own.bean.CheckworkInfExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from checkwork_inf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from checkwork_inf
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from checkwork_inf
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.own.bean.CheckworkInfExample">
    delete from checkwork_inf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.own.bean.CheckworkInf">
    insert into checkwork_inf (ID, DEPT_ID, JOB_ID, 
      EMP_ID, WORKINGDAYS, DAYSLEAVE, 
      CREATEDATE, DAYSOUT)
    values (#{id,jdbcType=INTEGER}, #{deptId,jdbcType=INTEGER}, #{jobId,jdbcType=INTEGER}, 
      #{empId,jdbcType=INTEGER}, #{workingdays,jdbcType=INTEGER}, #{daysleave,jdbcType=INTEGER}, 
      #{createdate,jdbcType=TIMESTAMP}, #{daysout,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.own.bean.CheckworkInf">
    insert into checkwork_inf
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="deptId != null">
        DEPT_ID,
      </if>
      <if test="jobId != null">
        JOB_ID,
      </if>
      <if test="empId != null">
        EMP_ID,
      </if>
      <if test="workingdays != null">
        WORKINGDAYS,
      </if>
      <if test="daysleave != null">
        DAYSLEAVE,
      </if>
      <if test="createdate != null">
        CREATEDATE,
      </if>
      <if test="daysout != null">
        DAYSOUT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="jobId != null">
        #{jobId,jdbcType=INTEGER},
      </if>
      <if test="empId != null">
        #{empId,jdbcType=INTEGER},
      </if>
      <if test="workingdays != null">
        #{workingdays,jdbcType=INTEGER},
      </if>
      <if test="daysleave != null">
        #{daysleave,jdbcType=INTEGER},
      </if>
      <if test="createdate != null">
        #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="daysout != null">
        #{daysout,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.own.bean.CheckworkInfExample" resultType="java.lang.Long">
    select count(*) from checkwork_inf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
      select * from checkwork_inf
    </select>
    <update id="updateByExampleSelective" parameterType="map">
    update checkwork_inf
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.deptId != null">
        DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.jobId != null">
        JOB_ID = #{record.jobId,jdbcType=INTEGER},
      </if>
      <if test="record.empId != null">
        EMP_ID = #{record.empId,jdbcType=INTEGER},
      </if>
      <if test="record.workingdays != null">
        WORKINGDAYS = #{record.workingdays,jdbcType=INTEGER},
      </if>
      <if test="record.daysleave != null">
        DAYSLEAVE = #{record.daysleave,jdbcType=INTEGER},
      </if>
      <if test="record.createdate != null">
        CREATEDATE = #{record.createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.daysout != null">
        DAYSOUT = #{record.daysout,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update checkwork_inf
    set ID = #{record.id,jdbcType=INTEGER},
      DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      JOB_ID = #{record.jobId,jdbcType=INTEGER},
      EMP_ID = #{record.empId,jdbcType=INTEGER},
      WORKINGDAYS = #{record.workingdays,jdbcType=INTEGER},
      DAYSLEAVE = #{record.daysleave,jdbcType=INTEGER},
      CREATEDATE = #{record.createdate,jdbcType=TIMESTAMP},
      DAYSOUT = #{record.daysout,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.own.bean.CheckworkInf">
    update checkwork_inf
    <set>
      <if test="deptId != null">
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="jobId != null">
        JOB_ID = #{jobId,jdbcType=INTEGER},
      </if>
      <if test="empId != null">
        EMP_ID = #{empId,jdbcType=INTEGER},
      </if>
      <if test="workingdays != null">
        WORKINGDAYS = #{workingdays,jdbcType=INTEGER},
      </if>
      <if test="daysleave != null">
        DAYSLEAVE = #{daysleave,jdbcType=INTEGER},
      </if>
      <if test="createdate != null">
        CREATEDATE = #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="daysout != null">
        DAYSOUT = #{daysout,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.own.bean.CheckworkInf">
    update checkwork_inf
    set DEPT_ID = #{deptId,jdbcType=INTEGER},
      JOB_ID = #{jobId,jdbcType=INTEGER},
      EMP_ID = #{empId,jdbcType=INTEGER},
      WORKINGDAYS = #{workingdays,jdbcType=INTEGER},
      DAYSLEAVE = #{daysleave,jdbcType=INTEGER},
      CREATEDATE = #{createdate,jdbcType=TIMESTAMP},
      DAYSOUT = #{daysout,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>