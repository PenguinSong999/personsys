<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.own.mapper.EmployeeInfMapper">
  <resultMap id="BaseResultMap" type="com.own.bean.EmployeeInf" autoMapping="true">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="dept_id" jdbcType="INTEGER" property="deptId" />
    <result column="job_id" jdbcType="INTEGER" property="jobId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="card_id" jdbcType="VARCHAR" property="cardId" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="sex_id" jdbcType="INTEGER" property="sexId" />
    <result column="education_id" jdbcType="INTEGER" property="educationId" />
    <result column="createdate" jdbcType="TIMESTAMP" property="createdate" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <association property="deptInf" column="dept_id" select="com.own.mapper.DeptInfMapper.selectByPrimaryKey"/>
    <association property="educationInf" column="education_id" select="com.own.mapper.EducationInfMapper.selectByPrimaryKey"/>
    <association property="jobInf" column="job_id" select="com.own.mapper.JobInfMapper.selectByPrimaryKey"/>
    <association property="sexInf" column="sex_id" select="com.own.mapper.SexInfMapper.selectByPrimaryKey"/>
    <association property="userInf" column="user_id" select="com.own.mapper.UserInfMapper.selectByPrimaryKey"/>
   </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, dept_id, job_id, name, card_id, address, phone, sex_id, education_id, createdate, 
    user_id
  </sql>
  <select id="selectByExample" parameterType="com.own.bean.EmployeeInfExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employee_inf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employee_inf
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from employee_inf
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.own.bean.EmployeeInfExample">
    delete from employee_inf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.own.bean.EmployeeInf">
    insert into employee_inf (id, dept_id, job_id, 
      name, card_id, address, 
      phone, sex_id, education_id, 
      createdate, user_id)
    values (#{id,jdbcType=INTEGER}, #{deptId,jdbcType=INTEGER}, #{jobId,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{cardId,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{sexId,jdbcType=INTEGER}, #{educationId,jdbcType=INTEGER}, 
      #{createdate,jdbcType=TIMESTAMP}, #{userId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.own.bean.EmployeeInf">
    insert into employee_inf
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="deptId != null">
        dept_id,
      </if>
      <if test="jobId != null">
        job_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="cardId != null">
        card_id,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="sexId != null">
        sex_id,
      </if>
      <if test="educationId != null">
        education_id,
      </if>
      <if test="createdate != null">
        createdate,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="jobId != null">
        #{jobId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="cardId != null">
        #{cardId,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="sexId != null">
        #{sexId,jdbcType=INTEGER},
      </if>
      <if test="educationId != null">
        #{educationId,jdbcType=INTEGER},
      </if>
      <if test="createdate != null">
        #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.own.bean.EmployeeInfExample" resultType="java.lang.Long">
    select count(*) from employee_inf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
      select * from employee_inf e
    </select>
  <select id="findCountBySexId" resultType="java.lang.Long">
    select count(*) from employee_inf where sex_id = #{sexId}
  </select>
  <select id="findCount" resultType="java.lang.Long">
    select count(*) from employee_inf
  </select>
  <select id="findCountByJobId" resultType="java.lang.Long">
        select count(*) from employee_inf where job_id = #{jobId}
  </select>
  <select id="findCountlikeAddress" resultType="java.lang.Long">
    select count(*) from employee_inf where  address like #{address}
  </select>

  <update id="updateByExampleSelective" parameterType="map">
    update employee_inf
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.deptId != null">
        dept_id = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.jobId != null">
        job_id = #{record.jobId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.cardId != null">
        card_id = #{record.cardId,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.sexId != null">
        sex_id = #{record.sexId,jdbcType=INTEGER},
      </if>
      <if test="record.educationId != null">
        education_id = #{record.educationId,jdbcType=INTEGER},
      </if>
      <if test="record.createdate != null">
        createdate = #{record.createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update employee_inf
    set id = #{record.id,jdbcType=INTEGER},
      dept_id = #{record.deptId,jdbcType=INTEGER},
      job_id = #{record.jobId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      card_id = #{record.cardId,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      sex_id = #{record.sexId,jdbcType=INTEGER},
      education_id = #{record.educationId,jdbcType=INTEGER},
      createdate = #{record.createdate,jdbcType=TIMESTAMP},
      user_id = #{record.userId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.own.bean.EmployeeInf">
    update employee_inf
    <set>
      <if test="deptId != null">
        dept_id = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="jobId != null">
        job_id = #{jobId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="cardId != null">
        card_id = #{cardId,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="sexId != null">
        sex_id = #{sexId,jdbcType=INTEGER},
      </if>
      <if test="educationId != null">
        education_id = #{educationId,jdbcType=INTEGER},
      </if>
      <if test="createdate != null">
        createdate = #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.own.bean.EmployeeInf">
    update employee_inf
    set dept_id = #{deptId,jdbcType=INTEGER},
      job_id = #{jobId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      card_id = #{cardId,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      sex_id = #{sexId,jdbcType=INTEGER},
      education_id = #{educationId,jdbcType=INTEGER},
      createdate = #{createdate,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>